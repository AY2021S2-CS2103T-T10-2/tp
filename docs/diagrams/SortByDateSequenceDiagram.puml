@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":PlannerParser" as PlannerParser LOGIC_COLOR
participant ":SortCommandParser" as SortCommandParser LOGIC_COLOR
participant ":TaskDateComparator" as TaskDateComparator LOGIC_COLOR
participant ":SortCommand" as SortCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute(sort by a)
activate LogicManager

LogicManager -> PlannerParser : parseCommand(sort by a)
activate PlannerParser

create SortCommandParser
PlannerParser -> SortCommandParser : new SortCommandParser()
activate SortCommandParser

SortCommandParser --> PlannerParser : return
deactivate SortCommandParser

PlannerParser -> SortCommandParser : parse(sort by a)
activate SortCommandParser

create TaskDateComparator
SortCommandParser -> TaskDateComparator : new TaskDateComparator()
activate TaskDateComparator

TaskDateComparator --> SortCommandParser : predicate
deactivate TaskDateComparator

create SortCommand
SortCommandParser -> SortCommand : new SortCommand(Comparator, true)
activate SortCommand

SortCommand --> SortCommandParser : command
deactivate SortCommand

SortCommandParser --> PlannerParser : command
deactivate SortCommandParser

PlannerParser --> LogicManager : command
deactivate PlannerParser

LogicManager -> SortCommand : execute(model)
activate SortCommand

SortCommand -> Model : updateSortedTaskList(comparator)
activate Model

create CommandResult
SortCommand -> CommandResult : new CommandResult(Message_Success)
activate CommandResult

CommandResult --> SortCommand : result
deactivate CommandResult
SortCommand --> LogicManager : result
deactivate SortCommand

SortCommand -[hidden]-> LogicManager : result
destroy SortCommand

[<--LogicManager : return
deactivate LogicManager
@enduml
